#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  borga
#
#  Copyright 2013 Martin MÃ¡gr <mmagr@redhat.com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#

import os
import sys
import logging
import traceback
from kobo.conf import PyConfigParser

CONF_PATH = os.environ.get('BORGA_CONF', '~/.borga')

conf = PyConfigParser()
conf.load_from_file(os.path.expanduser(CONF_PATH))


def set_logger():
    formatter = logging.Formatter('[%(asctime)s][%(levelname)s]: '
                                  '%(message)s')
    handler = logging.FileHandler(conf.get('LOGFILE'))
    handler.setLevel(logging.INFO)
    handler.setFormatter(formatter)
    logger = logging.getLogger('borga')
    logger.setLevel(logging.INFO)
    logger.addHandler(handler)


try:
    from borga.main import main
    set_logger()
    main(conf)
except ImportError, ex:
    sys.stderr.write('%s.\n' % ex)
    sys.exit(1)
except KeyboardInterrupt:
    sys.stderr.write('Exiting on user cancel.\n')
    sys.exit(0)
except Exception as ex:
    logger = logging.getLogger('borga')
    logger.error(traceback.format_exc())
    sys.stderr.write('%s\n' % ex)
    sys.exit(2)
